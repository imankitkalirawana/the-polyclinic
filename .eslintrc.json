{
  "$schema": "https://json.schemastore.org/eslintrc.json",
  "env": {
    "browser": true, // for react
    "es2021": true, // for typescript
    "node": true // for node
  },
  "extends": ["plugin:react/recommended", "plugin:react-hooks/recommended", "prettier"],
  "plugins": [
    "react", // for react
    "unused-imports", // for unused imports
    "@typescript-eslint", // for typescript
    "import",
    "prettier", // for prettier,
    "simple-import-sort" // for import sorting
  ],
  "parser": "@typescript-eslint/parser", // for typescript
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true // for react
    },
    "ecmaVersion": "latest", // for typescript
    "sourceType": "module" // for typescript
  },
  "settings": {
    "react": {
      "version": "detect"
    }
  },
  "rules": {
    "react/react-in-jsx-scope": "off",
    "react/prop-types": "off",
    "react-hooks/exhaustive-deps": "off",
    "@typescript-eslint/no-namespace": "error",
    "prettier/prettier": "off",
    "no-unused-vars": "off",
    "unused-imports/no-unused-vars": "off",
    "unused-imports/no-unused-imports": "off",
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "ignoreRestSiblings": true,
        "argsIgnorePattern": "^_",
        "varsIgnorePattern": "^_"
      }
    ],
    "@typescript-eslint/no-explicit-any": "error", // This rule disallows the use of the `any` type.
    "no-console": ["warn", { "allow": ["warn", "error"] }],
    "simple-import-sort/imports": [
      "warn",
      {
        "groups": [
          ["^react$", "^next", "^@heroui", "^components", "^[a-z]", "^@\\w+"],
          ["^types", "^store", "^services", "^util", "^lib", "^public"],
          [
            "^\\.\\.(?!/?$)",
            "^\\.\\./?$",
            "^\\./(?=.*/)(?!/?$)",
            "^\\.(?!/?$)",
            "^\\./?$",
            "^\\.\\./?styles$",
            "^\\.\\./?styles$",
            "^\\./?styles$"
          ],
          // side effect imports like 'import "something"'
          ["^\\u0000"]
        ]
      }
    ]
  }
}
