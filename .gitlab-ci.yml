stages:
  - build
  - deploy

variables:
  DOCKER_DRIVER: overlay2
  APP_IMAGE: the-polyclinic
  DEPLOY_PATH: /var/www/the-polyclinic
  PNPM_CACHE_DIR: .pnpm-store

cache:
  key:
    files:
      - pnpm-lock.yaml
  paths:
    - $PNPM_CACHE_DIR

before_script:
  - npm install --global corepack@latest
  - corepack enable
  - corepack prepare pnpm@10.9.0--activate
  - pnpm config set store-dir $PNPM_CACHE_DIR

build-job:
  stage: build
  image: node:18
  script:
    - pnpm install --frozen-lockfile
    - pnpm run build
  artifacts:
    paths:
      - .next
  tags:
    - nextjs
    - ubuntu

deploy-job:
  stage: deploy
  image: docker:24.0.5
  services:
    - docker:24.0.5-dind
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_TLS_CERTDIR: ''
  script:
    - apk add --no-cache openssh-client
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | ssh-add -
    - mkdir -p ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
    - chmod 600 ~/.ssh/known_hosts
    - ssh -o StrictHostKeyChecking=no $DEPLOY_USER@$DEPLOY_HOST "mkdir -p $DEPLOY_PATH"
    - docker build -t $APP_IMAGE .
    - docker save $APP_IMAGE | ssh $DEPLOY_USER@$DEPLOY_HOST "docker load"
    - ssh $DEPLOY_USER@$DEPLOY_HOST "docker stop the-polyclinic || true && docker rm the-polyclinic || true"
    - ssh $DEPLOY_USER@$DEPLOY_HOST "docker run -d --name the-polyclinic -p 3000:3000 --env-file $DEPLOY_PATH/.env $APP_IMAGE"
  environment:
    name: production
  tags:
    - nextjs
    - ubuntu
  only:
    - main
